# Constants for the piece codes
EMPTY = 0
PAWN = 1
KNIGHT = 2
BISHOP = 3
ROOK = 4
QUEEN = 5
KING = 6

# Initialize the board as a 2D list
board = [
    [ROOK, KNIGHT, BISHOP, QUEEN, KING, BISHOP, KNIGHT, ROOK],
    [PAWN, PAWN, PAWN, PAWN, PAWN, PAWN, PAWN, PAWN],
    [EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY],
    [EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY],
    [EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY],
    [EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY],
    [PAWN, PAWN, PAWN, PAWN, PAWN, PAWN, PAWN, PAWN],
    [ROOK, KNIGHT, BISHOP, QUEEN, KING, BISHOP, KNIGHT, ROOK]
]

# Function to check if a move is valid
def is_valid_move(start_row, start_col, end_row, end_col):
    # Get the piece at the starting position
    piece = board[start_row][start_col]

    # Check if the piece can move to the ending position
    if piece == PAWN:
        # Pawns can only move forward one square, or two squares on their first move
        if start_col == end_col:
            if start_row == 1 and end_row == 3:
                return True
            elif start_row == 6 and end_row == 4:
                return True
            elif abs(start_row - end_row) == 1:
                return True
        # Pawns can capture diagonally
        elif abs(start_col - end_col) == 1 and abs(start_row - end_row) == 1:
            return True
    elif piece == KNIGHT:
        # Knights can move in an L-shape (two squares in one direction, then one square in the other direction)
        if abs(start_row - end_row) == 2 and abs(start_col - end_col) == 1:
            return True
        elif abs(start_row - end_row) == 1 and abs(start_col - end_col) == 2:
            return True
    elif piece == BISHOP:
        # Bishops can move diagonally
        if abs(start_row - end_row) == abs(start_col - end_col):
            return True
    elif piece == ROOK:
        # Rooks can move horizontally or vertically
        if start_row == end_row or start_col == end_col:
            return True
    elif piece == QUEEN:
        # Queens can move like bishops or rooks
        if abs(start_row - end_row) == abs(start_col - end
